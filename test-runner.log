2021-12-16 03:24:09 info: ----------------------------------------------
2021-12-16 03:24:09 info: >>> Running Unit Test `ex1-giveCompliment` <<<
2021-12-16 03:24:09 info: ----------------------------------------------
2021-12-16 03:24:13 error: *** Unit Test Error Report ***

✕ giveCompliment should include a `compliments` array inside its function body
✕ giveCompliment the `compliments` array should be initialized with 10 strings
✕ giveCompliment should give a random compliment: You are `compliment`, `name`!


Command failed: npx jest ex1-giveCompliment.test.js --colors --reporters="/Users/ensar/Desktop/Homework-class35/test-runner/CustomReporter.js"
2021-12-16 03:24:16 error: *** Spell Checker Report ***

ex1-giveCompliment.js:41:19 - Unknown word (Ensar)

2021-12-16 03:26:14 info: Disclaimer turned off
2021-12-16 03:26:32 info: ----------------------------------------------
2021-12-16 03:26:32 info: >>> Running Unit Test `ex1-giveCompliment` <<<
2021-12-16 03:26:32 info: ----------------------------------------------
2021-12-16 03:26:35 error: *** Unit Test Error Report ***

✕ giveCompliment should include a `compliments` array inside its function body
✕ giveCompliment the `compliments` array should be initialized with 10 strings
✕ giveCompliment should give a random compliment: You are `compliment`, `name`!


Command failed: npx jest ex1-giveCompliment.test.js --colors --reporters="/Users/ensar/Desktop/Homework-class35/test-runner/CustomReporter.js"
2021-12-16 03:26:38 error: *** Spell Checker Report ***

ex1-giveCompliment.js:41:19 - Unknown word (Ensar)

2021-12-16 03:27:17 info: ----------------------------------------------
2021-12-16 03:27:17 info: >>> Running Unit Test `ex1-giveCompliment` <<<
2021-12-16 03:27:17 info: ----------------------------------------------
2021-12-16 03:27:20 info: All unit tests passed.
2021-12-16 03:27:23 error: *** Spell Checker Report ***

ex1-giveCompliment.js:41:19 - Unknown word (Ensar)

2021-12-16 05:38:44 info: ----------------------------------------
2021-12-16 05:38:44 info: >>> Running Unit Test `ex2-dogYears` <<<
2021-12-16 05:38:44 info: ----------------------------------------
2021-12-16 05:38:48 info: All unit tests passed.
2021-12-16 05:38:51 info: All steps were completed successfully
2021-12-16 05:39:18 info: -------------------------------------------
2021-12-16 05:39:18 info: >>> Running Unit Test `ex3-tellFortune` <<<
2021-12-16 05:39:18 info: -------------------------------------------
2021-12-16 05:39:20 error: *** Unit Test Error Report ***

✕ tellFortune should tell the fortune by randomly selecting array values
  Expected: You will be a web Developer in Amsterdam, married to Sarah with 1 kids.
  Received:  You will be a web Developer in Amsterdam married to Sarah with 1 kids.


Command failed: npx jest ex3-tellFortune.test.js --colors --reporters="/Users/ensar/Desktop/Homework-class35/test-runner/CustomReporter.js"
2021-12-16 05:40:00 info: -------------------------------------------
2021-12-16 05:40:00 info: >>> Running Unit Test `ex3-tellFortune` <<<
2021-12-16 05:40:00 info: -------------------------------------------
2021-12-16 05:40:02 error: *** Unit Test Error Report ***

✕ tellFortune should tell the fortune by randomly selecting array values
  Expected: You will be a web Developer in Amsterdam, married to Sarah with 1 kids.
  Received: You will be a web Developer in Amsterdam married to Sarah with 1 kids.


Command failed: npx jest ex3-tellFortune.test.js --colors --reporters="/Users/ensar/Desktop/Homework-class35/test-runner/CustomReporter.js"
2021-12-16 05:54:56 info: -------------------------------------------
2021-12-16 05:54:56 info: >>> Running Unit Test `ex3-tellFortune` <<<
2021-12-16 05:54:56 info: -------------------------------------------
2021-12-16 05:55:00 error: *** Unit Test Error Report ***

✕ tellFortune should tell the fortune by randomly selecting array values
  Expected: You will be a web developer in Amsterdam, married to Sarah with 1 kids.
  Received: You will be a web developer in Amsterdam married to Sarah with 1 kids.


Command failed: npx jest ex3-tellFortune.test.js --colors --reporters="/Users/ensar/Desktop/Homework-class35/test-runner/CustomReporter.js"
2021-12-16 05:55:40 info: -------------------------------------------
2021-12-16 05:55:40 info: >>> Running Unit Test `ex3-tellFortune` <<<
2021-12-16 05:55:40 info: -------------------------------------------
2021-12-16 05:55:43 info: All unit tests passed.
2021-12-16 05:55:46 info: All steps were completed successfully
2021-12-16 05:57:34 info: --------------------------------------------
2021-12-16 05:57:34 info: >>> Running Unit Test `ex4-shoppingCart` <<<
2021-12-16 05:57:34 info: --------------------------------------------
2021-12-16 05:57:34 info: Exercise has not yet been modified
2021-12-16 05:57:34 warn: A unit test file was not provided.
2021-12-16 05:57:36 error: *** ESLint Report ***

ex4-shoppingCart.js
  23:7  error  'shoppingCart' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2021-12-16 06:05:02 info: --------------------------------------------
2021-12-16 06:05:02 info: >>> Running Unit Test `ex4-shoppingCart` <<<
2021-12-16 06:05:02 info: --------------------------------------------
2021-12-16 06:05:02 warn: A unit test file was not provided.
2021-12-16 06:05:06 info: All steps were completed successfully
2021-12-16 06:06:54 info: --------------------------------------------
2021-12-16 06:06:54 info: >>> Running Unit Test `ex4-shoppingCart` <<<
2021-12-16 06:06:54 info: --------------------------------------------
2021-12-16 06:06:54 warn: A unit test file was not provided.
2021-12-16 06:06:57 info: All steps were completed successfully
2021-12-16 06:15:16 info: --------------------------------------------
2021-12-16 06:15:16 info: >>> Running Unit Test `ex4-shoppingCart` <<<
2021-12-16 06:15:16 info: --------------------------------------------
2021-12-16 06:15:16 warn: A unit test file was not provided.
2021-12-16 06:15:18 error: *** ESLint Report ***

ex4-shoppingCart.js
  27:11  error  Expected '===' and instead saw '=='  eqeqeq

✖ 1 problem (1 error, 0 warnings)


2021-12-16 06:23:51 info: --------------------------------------------
2021-12-16 06:23:51 info: >>> Running Unit Test `ex4-shoppingCart` <<<
2021-12-16 06:23:51 info: --------------------------------------------
2021-12-16 06:23:51 warn: A unit test file was not provided.
2021-12-16 06:23:53 error: *** ESLint Report ***

ex4-shoppingCart.js
  27:11  error  Expected '===' and instead saw '=='  eqeqeq

✖ 1 problem (1 error, 0 warnings)


2021-12-17 12:33:43 info: --------------------------------------------
2021-12-17 12:33:43 info: >>> Running Unit Test `ex4-shoppingCart` <<<
2021-12-17 12:33:43 info: --------------------------------------------
2021-12-17 12:33:43 info: Exercise has not yet been modified
2021-12-17 12:33:43 warn: A unit test file was not provided.
2021-12-17 12:33:45 error: *** ESLint Report ***

ex4-shoppingCart.js
  23:7  error  'shoppingCart' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2021-12-18 12:48:29 info: ----------------------------------------------
2021-12-18 12:48:29 info: >>> Running Unit Test `ex1-giveCompliment` <<<
2021-12-18 12:48:29 info: ----------------------------------------------
2021-12-18 12:48:33 info: All unit tests passed.
2021-12-18 12:48:36 info: All steps were completed successfully
2021-12-18 12:48:56 info: ----------------------------------------
2021-12-18 12:48:56 info: >>> Running Unit Test `ex2-dogYears` <<<
2021-12-18 12:48:56 info: ----------------------------------------
2021-12-18 12:48:59 info: All unit tests passed.
2021-12-18 12:49:02 info: All steps were completed successfully
2021-12-18 12:49:28 info: -------------------------------------------
2021-12-18 12:49:28 info: >>> Running Unit Test `ex3-tellFortune` <<<
2021-12-18 12:49:28 info: -------------------------------------------
2021-12-18 12:49:30 info: All unit tests passed.
2021-12-18 12:49:34 info: All steps were completed successfully
2021-12-18 06:02:06 info: -----------------------------------------
2021-12-18 06:02:06 info: >>> Running Unit Test `ex6-totalCost` <<<
2021-12-18 06:02:06 info: -----------------------------------------
2021-12-18 06:02:06 warn: A unit test file was not provided.
2021-12-18 06:02:10 info: All steps were completed successfully
2021-12-18 07:53:22 info: --------------------------------------------
2021-12-18 07:53:22 info: >>> Running Unit Test `ex4-shoppingCart` <<<
2021-12-18 07:53:22 info: --------------------------------------------
2021-12-18 07:53:22 warn: A unit test file was not provided.
2021-12-18 07:53:25 info: All steps were completed successfully
2021-12-18 07:53:54 info: ------------------------------------------------
2021-12-18 07:53:54 info: >>> Running Unit Test `ex5-shoppingCartPure` <<<
2021-12-18 07:53:54 info: ------------------------------------------------
2021-12-18 07:53:54 warn: A unit test file was not provided.
2021-12-18 07:53:56 info: All steps were completed successfully
2021-12-18 07:54:22 info: -------------------------------------------
2021-12-18 07:54:22 info: >>> Running Unit Test `ex7-mindPrivacy` <<<
2021-12-18 07:54:22 info: -------------------------------------------
2021-12-18 07:54:22 warn: A unit test file was not provided.
2021-12-18 07:54:25 info: All steps were completed successfully
2022-01-05 02:07:10 info: -------------------------------------------
2022-01-05 02:07:11 info: >>> Running Unit Test `ex3-tellFortune` <<<
2022-01-05 02:07:11 info: -------------------------------------------
2022-01-05 02:07:15 info: All unit tests passed.
2022-01-05 02:07:19 info: All steps were completed successfully
2022-01-17 12:02:42 info: ----------------------------------------
2022-01-17 12:02:42 info: >>> Running Unit Test `ex1-bookList` <<<
2022-01-17 12:02:42 info: ----------------------------------------
2022-01-17 12:02:51 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-bookList.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex1-bookList.test.js (5.245 s)
  Generated HTML
    ✕ HTML should be syntactically valid (152 ms)
    ✕ should have all TODO comments removed
    ✓ should contain a <ul> that is a child of <div id="bookList"> (5 ms)
    ✓ should contain a <ul> with 3 <li> elements (1 ms)
    ✓ should contain an <li> with title and author for each book of the `myBooks` array (1 ms)
    ✓ should contain an <img> element for each book

  ● Generated HTML › HTML should be syntactically valid

    expect(received).toBe(expected) // Object.is equality

    Expected: ""
    Received: "
    inline
      10:212  error  <img> is missing required \"alt\" attribute  wcag/h37
      10:490  error  <img> is missing required \"alt\" attribute  wcag/h37
      10:743  error  <img> is missing required \"alt\" attribute  wcag/h37·
    ✖ 3 problems (3 errors, 0 warnings)
    "

      44 |   const { results } = htmlValidate.validateString(htmlText);
      45 |   const validationReport = stylish(results);
    > 46 |   expect(validationReport).toBe('');
         |                            ^
      47 | }
      48 |
      49 | module.exports = {

      at validateHTML (test-runner/jsdom-helpers.js:46:28)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:42:5)

  ● Generated HTML › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 4 passed, 6 total
Snapshots:   0 total
Time:        5.412 s
Ran all test suites matching /ex1-bookList.test.js/i.
2022-01-17 12:46:42 info: ----------------------------------------
2022-01-17 12:46:42 info: >>> Running Unit Test `ex1-bookList` <<<
2022-01-17 12:46:42 info: ----------------------------------------
2022-01-17 12:46:51 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-bookList.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex1-bookList.test.js (5.138 s)
  Generated HTML
    ✕ HTML should be syntactically valid (155 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✓ should contain a <ul> that is a child of <div id="bookList"> (3 ms)
    ✓ should contain a <ul> with 3 <li> elements (1 ms)
    ✓ should contain an <li> with title and author for each book of the `myBooks` array (1 ms)
    ✓ should contain an <img> element for each book

  ● Generated HTML › HTML should be syntactically valid

    expect(received).toBe(expected) // Object.is equality

    Expected: ""
    Received: "
    inline
      10:212  error  <img> is missing required \"alt\" attribute  wcag/h37
      10:490  error  <img> is missing required \"alt\" attribute  wcag/h37
      10:743  error  <img> is missing required \"alt\" attribute  wcag/h37·
    ✖ 3 problems (3 errors, 0 warnings)
    "

      44 |   const { results } = htmlValidate.validateString(htmlText);
      45 |   const validationReport = stylish(results);
    > 46 |   expect(validationReport).toBe('');
         |                            ^
      47 | }
      48 |
      49 | module.exports = {

      at validateHTML (test-runner/jsdom-helpers.js:46:28)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:42:5)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        5.317 s, estimated 6 s
Ran all test suites matching /ex1-bookList.test.js/i.
2022-01-17 12:49:10 info: ----------------------------------------
2022-01-17 12:49:10 info: >>> Running Unit Test `ex1-bookList` <<<
2022-01-17 12:49:10 info: ----------------------------------------
2022-01-17 12:49:18 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-bookList.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex1-bookList.test.js (5.077 s)
  Generated HTML
    ✕ HTML should be syntactically valid (157 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✓ should contain a <ul> that is a child of <div id="bookList"> (2 ms)
    ✓ should contain a <ul> with 3 <li> elements (1 ms)
    ✓ should contain an <li> with title and author for each book of the `myBooks` array (1 ms)
    ✓ should contain an <img> element for each book (1 ms)

  ● Generated HTML › HTML should be syntactically valid

    expect(received).toBe(expected) // Object.is equality

    Expected: ""
    Received: "
    inline
      10:212  error  <img> is missing required \"alt\" attribute  wcag/h37
      10:490  error  <img> is missing required \"alt\" attribute  wcag/h37
      10:743  error  <img> is missing required \"alt\" attribute  wcag/h37·
    ✖ 3 problems (3 errors, 0 warnings)
    "

      44 |   const { results } = htmlValidate.validateString(htmlText);
      45 |   const validationReport = stylish(results);
    > 46 |   expect(validationReport).toBe('');
         |                            ^
      47 | }
      48 |
      49 | module.exports = {

      at validateHTML (test-runner/jsdom-helpers.js:46:28)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:42:5)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        5.259 s, estimated 6 s
Ran all test suites matching /ex1-bookList.test.js/i.
2022-01-17 02:20:55 info: ----------------------------------------
2022-01-17 02:20:55 info: >>> Running Unit Test `ex1-bookList` <<<
2022-01-17 02:20:55 info: ----------------------------------------
2022-01-17 02:21:03 info: All unit tests passed.
2022-01-17 02:21:06 info: All steps were completed successfully
2022-01-17 07:30:14 info: ---------------------------------------
2022-01-17 07:30:14 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-01-17 07:30:14 info: ---------------------------------------
2022-01-17 07:30:23 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js (5.413 s)
  Generated HTML
    ✓ should be syntactically valid (144 ms)
    ✕ should have all TODO comments removed (4 ms)
    ✓ the body font-family should be `Arial, sans-serif` (1 ms)
    ✓ each <li> should have the CSS class `list-item` (2 ms)
    ✕ each <li> should rendered red (37 ms)

  ● Generated HTML › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● Generated HTML › each <li> should rendered red

    expect(received).toBeTruthy()

    Received: false

      40 |       (node) => window.getComputedStyle(node).color
      41 |     );
    > 42 |     expect(colors.every((color) => color === 'red')).toBeTruthy();
         |                                                      ^
      43 |   });
      44 | });
      45 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:42:54)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 3 passed, 5 total
Snapshots:   0 total
Time:        5.603 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
2022-01-17 07:32:58 info: ---------------------------------------
2022-01-17 07:32:58 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-01-17 07:32:58 info: ---------------------------------------
2022-01-17 07:33:06 info: All unit tests passed.
2022-01-17 07:33:10 info: All steps were completed successfully
2022-01-17 07:33:33 info: ------------------------------------------
2022-01-17 07:33:33 info: >>> Running Unit Test `ex3-hijackLogo` <<<
2022-01-17 07:33:33 info: ------------------------------------------
2022-01-17 07:33:36 info: All unit tests passed.
2022-01-17 07:33:39 info: All steps were completed successfully
2022-01-17 07:34:06 info: --------------------------------------------
2022-01-17 07:34:06 info: >>> Running Unit Test `ex4-whatsTheTime` <<<
2022-01-17 07:34:06 info: --------------------------------------------
2022-01-17 07:34:16 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-whatsTheTime.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex4-whatsTheTime.test.js (7.068 s)
  whatsTheTime
    ✓ HTML should be syntactically valid (146 ms)
    ✕ should have all TODO comments removed (2 ms)
    ✓ should use `setInterval()`
    ✓ should not call `setInterval()` more than once (2002 ms)
    ✓ should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event
    ✓ `window.onload` or `window.addEventListener` should not call its event handler function

  ● whatsTheTime › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        7.243 s
Ran all test suites matching /ex4-whatsTheTime.test.js/i.
2022-01-17 07:34:36 info: --------------------------------------------
2022-01-17 07:34:36 info: >>> Running Unit Test `ex4-whatsTheTime` <<<
2022-01-17 07:34:36 info: --------------------------------------------
2022-01-17 07:34:42 info: All unit tests passed.
2022-01-17 07:34:43 info: All steps were completed successfully
2022-01-17 07:35:05 info: ---------------------------------------
2022-01-17 07:35:05 info: >>> Running Unit Test `ex5-catWalk` <<<
2022-01-17 07:35:05 info: ---------------------------------------
2022-01-17 07:35:10 error: *** Unit Test Error Report ***

Command failed: npx jest ex5-catWalk.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex5-catWalk.test.js
  catWalk
    ✓ HTML should be syntactically valid (139 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✓ should use `setInterval()` and/or `setTimeout()` (1 ms)
    ✕ should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event (2 ms)
    ✓ `window.onload` or `window.addEventListener` should not call its event handler function (1 ms)

  ● catWalk › should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event

    expect(received).toBeDefined()

    Received: undefined

      50 |
      51 |   test('should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event', () => {
    > 52 |     expect(state.onload).toBeDefined();
         |                          ^
      53 |   });
      54 |
      55 |   test('`window.onload` or `window.addEventListener` should not call its event handler function', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex5-catWalk.test.js:52:26)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        3.043 s
Ran all test suites matching /ex5-catWalk.test.js/i.
2022-01-17 07:37:09 info: ---------------------------------------
2022-01-17 07:37:09 info: >>> Running Unit Test `ex5-catWalk` <<<
2022-01-17 07:37:09 info: ---------------------------------------
2022-01-17 07:37:13 info: All unit tests passed.
2022-01-17 07:37:15 info: All steps were completed successfully
2022-01-17 07:37:44 info: ------------------------------------------
2022-01-17 07:37:44 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 07:37:44 info: ------------------------------------------
2022-01-17 07:37:46 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (2 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (4 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✓ a living cell with two living neighbors should survive and have its life time incremented by one
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 8 passed, 11 total
Snapshots:   0 total
Time:        0.717 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 07:58:26 info: ------------------------------------------
2022-01-17 07:58:26 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 07:58:26 info: ------------------------------------------
2022-01-17 07:58:31 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (2 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (4 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✓ a living cell with two living neighbors should survive and have its life time incremented by one
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero
    ✕ a dead cell with three living neighbors should come alive and have its lifeTime reset to one
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      224 |     game.updateGrid();
      225 |
    > 226 |     expect(midCell.alive).toBe(true);
          |                           ^
      227 |     expect(midCell.lifeTime).toBe(1);
      228 |   });
      229 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:226:27)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 7 passed, 11 total
Snapshots:   0 total
Time:        1.013 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 08:00:26 info: ------------------------------------------
2022-01-17 08:00:26 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 08:00:26 info: ------------------------------------------
2022-01-17 08:00:29 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✕ should exist and be executable (2 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (3 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero
    ✕ a dead cell with zero living neighbors should remain dead and have a life time of zero
    ✕ a dead cell with one living neighbor should remain dead and have a life time of zero
    ✕ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✕ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✕ a dead cell with four living neighbors should remain dead and have a life time of zero

  ● Game Of Life: › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      29 |
      30 |   test('should exist and be executable', () => {
    > 31 |     expect(exported).toBeDefined();
         |                      ^
      32 |   });
      33 |
      34 |   test('a living cell with zero living neighbors should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:31:22)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    TypeError: createGame is not a function

      43 |     };
      44 |
    > 45 |     const game = createGame(context, 3, 3);
         |                  ^
      46 |     game.grid.splice(0, 0, ...grid);
      47 |
      48 |     game.updateGrid();

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:45:18)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    TypeError: createGame is not a function

      64 |     };
      65 |
    > 66 |     const game = createGame(context, 3, 3);
         |                  ^
      67 |     game.grid.splice(0, 0, ...grid);
      68 |
      69 |     game.updateGrid();

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:66:18)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    TypeError: createGame is not a function

      86 |     };
      87 |
    > 88 |     const game = createGame(context, 3, 3);
         |                  ^
      89 |     game.grid.splice(0, 0, ...grid);
      90 |
      91 |     game.updateGrid();

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:88:18)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    TypeError: createGame is not a function

      109 |     };
      110 |
    > 111 |     const game = createGame(context, 3, 3);
          |                  ^
      112 |     game.grid.splice(0, 0, ...grid);
      113 |
      114 |     game.updateGrid();

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:111:18)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    TypeError: createGame is not a function

      133 |     };
      134 |
    > 135 |     const game = createGame(context, 3, 3);
          |                  ^
      136 |     game.grid.splice(0, 0, ...grid);
      137 |
      138 |     game.updateGrid();

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:135:18)

  ● Game Of Life: › a dead cell with zero living neighbors should remain dead and have a life time of zero

    TypeError: createGame is not a function

      153 |     };
      154 |
    > 155 |     const game = createGame(context, 3, 3);
          |                  ^
      156 |     game.grid.splice(0, 0, ...grid);
      157 |
      158 |     game.updateGrid();

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:155:18)

  ● Game Of Life: › a dead cell with one living neighbor should remain dead and have a life time of zero

    TypeError: createGame is not a function

      174 |     };
      175 |
    > 176 |     const game = createGame(context, 3, 3);
          |                  ^
      177 |     game.grid.splice(0, 0, ...grid);
      178 |
      179 |     game.updateGrid();

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:176:18)

  ● Game Of Life: › a dead cell with two living neighbors should remain dead and have a life time of zero

    TypeError: createGame is not a function

      196 |     };
      197 |
    > 198 |     const game = createGame(context, 3, 3);
          |                  ^
      199 |     game.grid.splice(0, 0, ...grid);
      200 |
      201 |     game.updateGrid();

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:198:18)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    TypeError: createGame is not a function

      219 |     };
      220 |
    > 221 |     const game = createGame(context, 3, 3);
          |                  ^
      222 |     game.grid.splice(0, 0, ...grid);
      223 |
      224 |     game.updateGrid();

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:221:18)

  ● Game Of Life: › a dead cell with four living neighbors should remain dead and have a life time of zero

    TypeError: createGame is not a function

      243 |     };
      244 |
    > 245 |     const game = createGame(context, 3, 3);
          |                  ^
      246 |     game.grid.splice(0, 0, ...grid);
      247 |
      248 |     game.updateGrid();

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:245:18)

Test Suites: 1 failed, 1 total
Tests:       11 failed, 11 total
Snapshots:   0 total
Time:        0.959 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 08:00:30 error: *** ESLint Report ***

ex6-gameOfLife/index.js
  136:5  error  Parsing error: Unexpected token }

✖ 1 problem (1 error, 0 warnings)


2022-01-17 08:45:04 info: ------------------------------------------
2022-01-17 08:45:04 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 08:45:04 info: ------------------------------------------
2022-01-17 08:45:09 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (3 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (19 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (11 ms)
    ✓ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (2 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 8 passed, 11 total
Snapshots:   0 total
Time:        1.682 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 11:27:33 info: ------------------------------------------
2022-01-17 11:27:33 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 11:27:33 info: ------------------------------------------
2022-01-17 11:27:38 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (1 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (5 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one
    ✕ a living cell with three living neighbors should survive and have its life time incremented by one
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero
    ✕ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      91 |     game.updateGrid();
      92 |
    > 93 |     expect(midCell.alive).toBe(true);
         |                           ^
      94 |     expect(midCell.lifeTime).toBe(2);
      95 |   });
      96 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:93:27)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      114 |     game.updateGrid();
      115 |
    > 116 |     expect(midCell.alive).toBe(true);
          |                           ^
      117 |     expect(midCell.lifeTime).toBe(2);
      118 |   });
      119 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:116:27)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      224 |     game.updateGrid();
      225 |
    > 226 |     expect(midCell.alive).toBe(true);
          |                           ^
      227 |     expect(midCell.lifeTime).toBe(1);
      228 |   });
      229 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:226:27)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        1.067 s, estimated 2 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 11:27:39 error: *** ESLint Report ***

ex6-gameOfLife/index.js
  123:7  warning  Remove commented-out code  hyf/no-commented-out-code

✖ 1 problem (0 errors, 1 warning)


2022-01-17 11:29:20 info: ------------------------------------------
2022-01-17 11:29:20 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 11:29:20 info: ------------------------------------------
2022-01-17 11:29:22 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (2 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (4 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero
    ✕ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      91 |     game.updateGrid();
      92 |
    > 93 |     expect(midCell.alive).toBe(true);
         |                           ^
      94 |     expect(midCell.lifeTime).toBe(2);
      95 |   });
      96 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:93:27)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      114 |     game.updateGrid();
      115 |
    > 116 |     expect(midCell.alive).toBe(true);
          |                           ^
      117 |     expect(midCell.lifeTime).toBe(2);
      118 |   });
      119 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:116:27)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      224 |     game.updateGrid();
      225 |
    > 226 |     expect(midCell.alive).toBe(true);
          |                           ^
      227 |     expect(midCell.lifeTime).toBe(1);
      228 |   });
      229 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:226:27)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        0.494 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 11:29:24 error: *** ESLint Report ***

ex6-gameOfLife/index.js
  123:7  warning  Remove commented-out code  hyf/no-commented-out-code

✖ 1 problem (0 errors, 1 warning)


2022-01-17 11:29:32 info: ------------------------------------------
2022-01-17 11:29:32 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 11:29:32 info: ------------------------------------------
2022-01-17 11:29:34 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (1 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (4 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one
    ✕ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero
    ✕ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      91 |     game.updateGrid();
      92 |
    > 93 |     expect(midCell.alive).toBe(true);
         |                           ^
      94 |     expect(midCell.lifeTime).toBe(2);
      95 |   });
      96 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:93:27)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      114 |     game.updateGrid();
      115 |
    > 116 |     expect(midCell.alive).toBe(true);
          |                           ^
      117 |     expect(midCell.lifeTime).toBe(2);
      118 |   });
      119 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:116:27)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      224 |     game.updateGrid();
      225 |
    > 226 |     expect(midCell.alive).toBe(true);
          |                           ^
      227 |     expect(midCell.lifeTime).toBe(1);
      228 |   });
      229 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:226:27)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        0.481 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 11:29:34 error: *** ESLint Report ***

ex6-gameOfLife/index.js
  123:7  warning  Remove commented-out code  hyf/no-commented-out-code

✖ 1 problem (0 errors, 1 warning)


2022-01-17 11:30:02 info: ------------------------------------------
2022-01-17 11:30:02 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 11:30:02 info: ------------------------------------------
2022-01-17 11:30:05 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (1 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (5 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✓ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 8 passed, 11 total
Snapshots:   0 total
Time:        0.96 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 11:31:44 info: ------------------------------------------
2022-01-17 11:31:44 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 11:31:44 info: ------------------------------------------
2022-01-17 11:31:48 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (2 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (4 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✓ a living cell with two living neighbors should survive and have its life time incremented by one
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one
    ✕ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 8 passed, 11 total
Snapshots:   0 total
Time:        0.983 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 11:32:27 info: ------------------------------------------
2022-01-17 11:32:27 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 11:32:27 info: ------------------------------------------
2022-01-17 11:32:30 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (1 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (4 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero
    ✓ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one
    ✕ a living cell with four living neighbors should die and have its life time reset to zero
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 8 passed, 11 total
Snapshots:   0 total
Time:        0.909 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 11:34:11 info: ------------------------------------------
2022-01-17 11:34:11 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 11:34:11 info: ------------------------------------------
2022-01-17 11:34:14 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (2 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (4 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✓ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one
    ✕ a living cell with four living neighbors should die and have its life time reset to zero
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 8 passed, 11 total
Snapshots:   0 total
Time:        0.586 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 11:35:23 info: ------------------------------------------
2022-01-17 11:35:23 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 11:35:23 info: ------------------------------------------
2022-01-17 11:35:25 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (1 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (4 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✕ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    ✕ a living cell with four living neighbors should die and have its life time reset to zero
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✕ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      91 |     game.updateGrid();
      92 |
    > 93 |     expect(midCell.alive).toBe(true);
         |                           ^
      94 |     expect(midCell.lifeTime).toBe(2);
      95 |   });
      96 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:93:27)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      114 |     game.updateGrid();
      115 |
    > 116 |     expect(midCell.alive).toBe(true);
          |                           ^
      117 |     expect(midCell.lifeTime).toBe(2);
      118 |   });
      119 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:116:27)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      224 |     game.updateGrid();
      225 |
    > 226 |     expect(midCell.alive).toBe(true);
          |                           ^
      227 |     expect(midCell.lifeTime).toBe(1);
      228 |   });
      229 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:226:27)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        0.658 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 11:35:53 info: ------------------------------------------
2022-01-17 11:35:53 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 11:35:53 info: ------------------------------------------
2022-01-17 11:35:56 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    ✓ should exist and be executable (1 ms)
    ✕ a living cell with zero living neighbors should die and have its life time reset to zero (4 ms)
    ✕ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    ✓ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    ✓ a living cell with three living neighbors should survive and have its life time incremented by one
    ✕ a living cell with four living neighbors should die and have its life time reset to zero
    ✓ a dead cell with zero living neighbors should remain dead and have a life time of zero
    ✓ a dead cell with one living neighbor should remain dead and have a life time of zero
    ✓ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    ✓ a dead cell with three living neighbors should come alive and have its lifeTime reset to one
    ✓ a dead cell with four living neighbors should remain dead and have a life time of zero

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 8 passed, 11 total
Snapshots:   0 total
Time:        0.803 s, estimated 1 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
